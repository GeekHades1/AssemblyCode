; 程序运行时，定义数据存放在cs:0-cs:F单元中。
; 依次将这八个单元中的数据入栈，然后再依次出栈
; 达到逆序存放的目的
assume cs:code
code segment
		dw 0123h, 0456h, 0789h, 0abch, 0defh, 0fedh, 0cbah, 0987h
		dw 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
		; 用dw定义16个字型数据，在程序加载后面，将取得16个字的
		; 内存空间，存放这16个数据。在后面的程序中将这段
		; 空间当作栈来使用
start:  mov ax, cs
		mov ss, ax
		mov sp, 30h		; 将栈顶ss:sp指向 30h
		
		mov bx, 0
		mov cx, 8
s:		push cs:[bx]
		add bx, 2
		loop s
		
		mov bx, 0
		mov cx, 8
s0:		pop cs:[bx]
		add bx, 2
		loop s0
		
		mov ax, 4c00h
		int 21h
code ends
end start

; 0B28:0000  23 01 56 04 89 07 BC 0A-EF 0D ED 0F BA 0C 87 09
; 0B28:0010  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00
; 0B28:0020  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00
; 0B28:0030  8C C8 8E D0 BC 30 00 BB-00 00 B9 08 00 2E FF 37
; 栈的空间是 20h 16个单元，底部从30开始

; 经过入栈后的数据
; 0B28:0000  23 01 56 04 89 07 BC 0A-EF 0D ED 0F BA 0C 87 09
; 0B28:0010  00 00 00 00 00 00 00 00-00 00 4B 00 28 0B 3A 05
; 0B28:0020  87 09 BA 0C ED 0F EF 0D-BC 0A 89 07 56 04 23 01
; 0B28:0030  8C C8 8E D0 BC 30 00 BB-00 00 B9 08 00 2E FF 37

; 出栈后的数据, 逆序存放
; 0B28:0000  87 09 BA 0C ED 0F EF 0D-BC 0A 89 07 56 04 23 01
; 0B28:0010  00 00 00 00 00 00 00 00-00 00 4B 00 28 0B 12 72
; 0B28:0020  87 09 BA 0C ED 0F EF 0D-00 00 53 00 28 0B 3A 05
; 0B28:0030  8C C8 8E D0 BC 30 00 BB-00 00 B9 08 00 2E FF 37
